{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport cartReducer from './redux/reducers/cartReducers';\nconst reducer = combineReducers({\n  cart: cartReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/user/Desktop/Cafe_SecretAlly/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","reducer","cart","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userLogin","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,OAAO,GAAGL,eAAe,CAAC;AAC9BM,EAAAA,IAAI,EAAEF;AADwB,CAAD,CAA/B;AAKA,MAAMG,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAEP;AAAZ;AADS,CAArB;AAIA,MAAMQ,UAAU,GAAG,CAACb,KAAD,CAAnB;AAGA,MAAMc,KAAK,GAAGjB,WAAW,CACvBM,OADuB,EAEvBO,YAFuB,EAGvBT,mBAAmB,CAACF,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"; \r\nimport cartReducer from './redux/reducers/cartReducers';\r\n\r\nconst reducer = combineReducers({\r\n  cart: cartReducer,\r\n});\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}