{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userDeleteReducer, userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport cartReducer from './redux/reducers/cartReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  cart: cartReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/user/Desktop/Cafe_SecretAlly/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userDeleteReducer","userLoginReducer","userRegisterReducer","userUpdateReducer","cartReducer","reducer","userLogin","userRegister","userUpdate","userDelete","cart","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,mBAA9C,EAAmEC,iBAAnE,QAA4F,yBAA5F;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC9BU,EAAAA,SAAS,EAAEL,gBADmB;AAE9BM,EAAAA,YAAY,EAAEL,mBAFgB;AAG9BM,EAAAA,UAAU,EAAEL,iBAHkB;AAI9BM,EAAAA,UAAU,EAAET,iBAJkB;AAK9BU,EAAAA,IAAI,EAAEN;AALwB,CAAD,CAA/B;AASA,MAAMO,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACpBV,EAAAA,SAAS,EAAE;AAAEW,IAAAA,QAAQ,EAAEN;AAAZ;AADS,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAGA,MAAMqB,KAAK,GAAGxB,WAAW,CACvBU,OADuB,EAEvBW,YAFuB,EAGvBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"; \r\nimport { userDeleteReducer, userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\r\nimport cartReducer from './redux/reducers/cartReducers';\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userDelete: userDeleteReducer,\r\n  cart: cartReducer,\r\n});\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}